{"version":3,"sources":["alarm.mp3","reducer.js","Redux.js","actions.js","Pomodoro.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","breakLength","sessionLength","timeLeft","isInBreak","isRunning","store","createStore","state","arguments","length","undefined","action","type","Action","Object","assign","applyMiddleware","thunk","INCREASE_BREAK","DECREASE_BREAK","INCREASE_SESSION","DECREASE_SESSION","TOGGLE_PLAY","RESET","COUNT_DOWN","togglePlay","countDown","library","add","faChevronCircleUp","faChevronCircleDown","faClock","faPlayCircle","faPauseCircle","faSyncAlt","Pomodoro","_this$props","this","props","increaseBreak","decreaseBreak","increaseSession","decreaseSession","reset","react_default","a","createElement","className","react_fontawesome_index_es","icon","id","Pomodoro_Controller","value","onIncrease","onDecrease","Pomodoro_Clock","time","Pomodoro_Buttons","Component","connect","objectSpread","dispatch","getState","refreshIntervalId","setInterval","clearInterval","Controller","_ref","string","charAt","toUpperCase","slice","onClick","Clock","_ref2","minutes","Math","floor","seconds","document","getElementById","play","src","alarmSound","Buttons","_ref3","audio","pause","currentTime","Boolean","window","location","hostname","match","ReactDOM","render","es","src_Pomodoro","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.008b6258.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alarm.2f154994.mp3\";","import * as Action from './actions';\r\n\r\nexport function reducer(state = initialState, action) {\r\n  let sessionLength = state.sessionLength;\r\n  let breakLength = state.breakLength;\r\n\r\n  switch (action.type) {\r\n    case Action.INCREASE_BREAK:\r\n      if (state.isRunning) return state;\r\n      if (breakLength < 60) breakLength++;\r\n      return Object.assign({}, state, { breakLength });\r\n\r\n    case Action.DECREASE_BREAK:\r\n      if (state.isRunning) return state;\r\n      if (breakLength > 1) breakLength--;\r\n      return Object.assign({}, state, { breakLength });\r\n\r\n    case Action.INCREASE_SESSION:\r\n      if (state.isRunning) return state;\r\n      if (sessionLength < 60) sessionLength++;\r\n      return Object.assign({}, state, { sessionLength, timeLeft: sessionLength * 60 });\r\n\r\n    case Action.DECREASE_SESSION:\r\n      if (state.isRunning) return state;\r\n      if (sessionLength > 1) sessionLength--;\r\n      return Object.assign({}, state, { sessionLength, timeLeft: sessionLength * 60 });\r\n\r\n    case Action.TOGGLE_PLAY:\r\n      return Object.assign({}, state, { isRunning: !state.isRunning });\r\n\r\n    case Action.RESET:\r\n      return initialState;\r\n\r\n    case Action.COUNT_DOWN:\r\n      let timeLeft = state.timeLeft - 1;\r\n      let isInBreak = state.isInBreak;\r\n      if (timeLeft < 0) {\r\n        isInBreak = !isInBreak;\r\n        timeLeft = isInBreak ? state.breakLength * 60 : state.sessionLength * 60;\r\n      }\r\n      return Object.assign({}, state, { timeLeft, isInBreak });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  breakLength: 5,//in minutes\r\n  sessionLength: 25,//in minutes\r\n  timeLeft: 25 * 60,//in seconds\r\n  isInBreak: false,\r\n  isRunning: false\r\n};","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { reducer } from './reducer';\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk));","import { store } from './Redux';\r\n\r\nexport const INCREASE_BREAK = 'INCREASE_BREAK';\r\nexport const DECREASE_BREAK = 'DECREASE_BREAK';\r\nexport const INCREASE_SESSION = 'INCREASE_SESSION';\r\nexport const DECREASE_SESSION = 'DECREASE_SESSION';\r\nexport const TOGGLE_PLAY = 'TOGGLE_PLAY';\r\nexport const RESET = 'RESET';\r\nexport const COUNT_DOWN = 'COUNT_DOWN';\r\n\r\n//Action creator\r\nexport const increaseBreak = () => ({ type: INCREASE_BREAK });\r\nexport const decreaseBreak = () => ({ type: DECREASE_BREAK });\r\nexport const increaseSession = () => ({ type: INCREASE_SESSION });\r\nexport const decreaseSession = () => ({ type: DECREASE_SESSION });\r\nexport const togglePlay = () => ({ type: TOGGLE_PLAY });\r\nexport const reset = () => ({ type: RESET });\r\nexport const countDown = () => ({ type: COUNT_DOWN });\r\n\r\nexport function startCountDown() {\r\n  store.dispatch(togglePlay());\r\n  return (dispatch, getState) => {\r\n    var refreshIntervalId = setInterval(() => {\r\n      const { isRunning } = getState();\r\n      if (!isRunning) {\r\n        clearInterval(refreshIntervalId);\r\n        return;\r\n      }\r\n      dispatch(countDown());\r\n    }, 1000);\r\n  };\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronCircleUp, faChevronCircleDown, faClock, faPlayCircle, faPauseCircle, faSyncAlt } from '@fortawesome/free-solid-svg-icons'\nimport { connect } from \"react-redux\";\nimport { increaseBreak, decreaseBreak, increaseSession, decreaseSession, reset, startCountDown } from \"./actions\";\nimport alarmSound from './alarm.mp3'\n\nlibrary.add(faChevronCircleUp, faChevronCircleDown, faClock, faPlayCircle, faPauseCircle, faSyncAlt);\n\nclass Pomodoro extends Component {\n  render() {\n    const { breakLength, sessionLength, timeLeft, isRunning, isInBreak, increaseBreak, decreaseBreak, increaseSession, decreaseSession, togglePlay, reset } = this.props;\n    return (\n      <div className=\"wrappper center\" >\n        <div className=\"center center-row\">\n          <FontAwesomeIcon icon=\"clock\" className=\"icon\" id=\"app-icon\" />\n          <h1>Pomodoro Clock</h1>\n        </div>\n        <div className=\"center center-row\">\n          <Controller type=\"break\" value={breakLength} onIncrease={increaseBreak} onDecrease={decreaseBreak} />\n          <Controller type=\"session\" value={sessionLength} onIncrease={increaseSession} onDecrease={decreaseSession} />\n        </div>\n        <Clock time={timeLeft} isInBreak={isInBreak} />\n        <Buttons isRunning={isRunning} togglePlay={togglePlay} reset={reset} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ ...state });\nconst mapDispatchToProps = dispatch => (\n  {\n    increaseBreak: () => dispatch(increaseBreak()),\n    decreaseBreak: () => dispatch(decreaseBreak()),\n    increaseSession: () => dispatch(increaseSession()),\n    decreaseSession: () => dispatch(decreaseSession()),\n    togglePlay: () => dispatch(startCountDown()),\n    reset: () => dispatch(reset())\n  }\n);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pomodoro);\n\nconst Controller = ({ type, value, onIncrease, onDecrease }) => (\n  <div className=\"center controller\">\n    <div id={type + \"-label\"}>{capitalizeFirstLetter(type) + \" Length\"}</div>\n    <div className=\"center center-row\">\n      <div onClick={onIncrease} id={type + \"-increment\"}> {/* The test only works with click on div */}\n        <FontAwesomeIcon icon=\"chevron-circle-up\" className=\"icon\" />\n      </div>\n      <div id={type + \"-length\"}>{value}</div>\n      <div onClick={onDecrease} id={type + \"-decrement\"} >\n        <FontAwesomeIcon icon=\"chevron-circle-down\" className=\"icon\" />\n      </div>\n    </div>\n  </div>\n)\n\nconst Clock = ({ time, isInBreak }) => {\n  let minutes = Math.floor(time / 60);\n  minutes = minutes >= 10 ? minutes : '0' + minutes;\n  let seconds = time % 60;\n  seconds = seconds >= 10 ? seconds : '0' + seconds;\n\n  if (time === 0) {\n    document.getElementById('beep').play();\n  }\n\n  return (\n    <div id=\"clock\" className=\"center\">\n      <div id=\"timer-label\">{isInBreak ? \"It's break time!\" : \"Session\"}</div>\n      <div id=\"time-left\">{minutes}:{seconds}</div>\n      <audio src={alarmSound} id=\"beep\"></audio>\n    </div>\n  );\n}\n\nconst Buttons = ({ isRunning, togglePlay, reset }) => {\n  // if (time === 0) {\n  //   document.getElementById('beep').play();\n  // }\n  function onReset() {\n    const audio = document.getElementById('beep');\n    audio.pause();\n    audio.currentTime = 0;\n    reset()\n  }\n\n  return (\n    <div className=\"center center-row controller\">\n      <div onClick={togglePlay} id=\"start_stop\" >\n        <FontAwesomeIcon icon={isRunning ? \"pause-circle\" : \"play-circle\"} className=\"icon\" />\n      </div>\n      <div onClick={onReset} id=\"reset\" >\n        <FontAwesomeIcon icon=\"sync-alt\" className=\"icon\" />\n      </div>\n    </div>\n  );\n}\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Pomodoro from './Pomodoro';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport { store } from './Redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Pomodoro />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}